<api xmlns="http://ws.apache.org/ns/synapse" name="toolsMANAPI" context="/tools/man">
   <resource methods="POST" uri-template="/solicitudServicio?bpmSession={bpmSession}">
      <inSequence>
         <property name="uri.var.bpmSession" expression="$ctx:uri.var.bpmSession" type="STRING"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="apiconf" expression="get-property('registry','conf:tools/apiconfig.xml')" scope="default" type="OM"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="api_url" expression="$ctx:apiconf//api_url"/>
         <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="dataservices_url" expression="$ctx:apiconf//dataservices_url"/>
         <property name="equi_id" expression="json-eval($.solicitudServicio.equi_id)"/>
         <property name="empr_id" expression="json-eval($.solicitudServicio.empr_id)"/>

         <log level="custom" category="DEBUG">
            <property name="donde" value="iniciando solicitudServicio"/>
            <property name="payload" expression="json-eval($)"/>
            <property name="payload" expression="$ctx:equi_id"/>
            <property name="api url" expression="$ctx:api_url"/>
            <property name="ds url" expression="$ctx:dataservices_url"/>
         </log>
         <payloadFactory media-type="json" description="crear solicitud">
            <format>       
            {
                "solicitudRepracion":{
                    "f_solicitado": "$1"
                    ,"id_equipo":"$2"
                    ,"estado":"S"
                    ,"usrId":"$3"
                    ,"solicitante":"$4"
                    ,"causa":"$5"
                    ,"foto":"$6"
                    ,"id_empresa":"$7"
                }
            }
            </format>
            <args>
               <arg evaluator="json" expression="$.solicitudServicio.fec_solicitud"/>
               <arg evaluator="json" expression="$.solicitudServicio.equi_id"/>
               <arg evaluator="json" expression="$.solicitudServicio.user_id"/>
               <arg evaluator="json" expression="$.solicitudServicio.solicitante"/>
               <arg evaluator="json" expression="$.solicitudServicio.causa"/>
               <arg evaluator="json" expression="$.solicitudServicio.foto"/>
               <arg evaluator="json" expression="$.solicitudServicio.empr_id"/>
            </args>
         </payloadFactory>
         <property name="messageType" value="application/json" scope="axis2"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <property name="uri.var.solicitudServicio_url" expression="fn:concat($ctx:dataservices_url,'/MANDataService/solicitudServicio')" scope="default"/>
         <log level="custom" category="DEBUG">
            <property name="donde" value="dentro de solicitudServicio"/>
            <property name="payload" expression="json-eval($)"/>
            <property name="api url" expression="$ctx:uri.var.solicitudServicio_url"/>
         </log>
         <call>
            <endpoint>
               <http method="POST" uri-template="{uri.var.solicitudServicio_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <property name="TOOLS_ERROR" value="POST /solicitudServicio con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 3">
            <property name="msg actual 3 despues solicitud servicio" expression="json-eval($)"/>
         </log>

         <property name="messageType" value="application/json" scope="axis2"/>
         <property name="Server" scope="transport" action="remove"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <header name="Accept-Encoding" scope="transport" value="gzip,deflate"/>
         <header name="Content-Type" scope="transport" action="remove"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>

         <property name="uri.var.id_nuevaSolicitud_url" expression="fn:concat($ctx:dataservices_url,'/MANDataService/solicitudServicio/ultima?equi_id=',$ctx:equi_id)" scope="default"/>
         <log level="custom" category="DEBUG">
            <property name="donde" value="dentro de id solicitud"/>
            <property name="payload" expression="json-eval($)"/>
            <property name="api url" expression="$ctx:uri.var.id_nuevaSolicitud_url"/>
         </log>
         <call>
            <endpoint>
               <http method="GET" uri-template="{uri.var.id_nuevaSolicitud_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <property name="TOOLS_ERROR" value="POST /solicitudServicio/ultima con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 3">
            <property name="msg actual 3 despues solicitud contenedor" expression="json-eval($)"/>
            <property name="sose_id" expression="json-eval($.resultado.sose_id)"/>
         </log>
        <property name="sose_id" expression="json-eval($.resultado.sose_id)"/>

         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <payloadFactory media-type="json" description="crear solicitud">
            <format>                 { "nombre_proceso": "Proceso de Mantenimiento AssetPlanner"     ,"payload" : { "idSolicitudServicio":"$1","idOT":"0"}     ,"session" :"$2" ,"emprId":"$3"         }     </format>
            <args>
               <arg evaluator="xml" expression="get-property('sose_id')"/>
               <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
               <arg evaluator="xml" expression="get-property('empr_id')"/>

            </args>
         </payloadFactory>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 5 antes de BPM" expression="json-eval($)"/>
         </log>
         <property name="uri.var.instanciaBPM_url" expression="fn:concat($ctx:api_url,'/bpm/proceso/instancia')" scope="default"/>
         <call>
            <endpoint>
               <http method="POST" uri-template="{uri.var.instanciaBPM_url}"/>
            </endpoint>
         </call>
         <log level="custom" category="DEBUG" description="resp bonita 4">
            <property name="resp" expression="get-property('axis2', 'HTTP_SC')"/>
         </log>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_solicitudServicio": { "soco_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('sose_id')"/>
                  </args>
               </payloadFactory>
               <log level="custom" category="DEBUG" description="delete sol">
                  <property name="delete" expression="json-eval($)"/>
               </log>
               <property name="uri.var.solicitudServicioDELETE" expression="fn:concat($ctx:dataservices_url,'/solicitudServicio')" scope="default"/>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.solicitudServicioDELETE}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="POST /bpm/proceso/instancia con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 6 despues de BPM" expression="json-eval($)"/>
         </log>
         <property name="uri.var.caseid" expression="json-eval($.payload.caseId)" type="STRING"/>
         <property name="uri.var.bpmSession" expression="json-eval($.session)" type="STRING"/>
         <header name="Accept" scope="transport" value="application/json"/>
         <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
         <payloadFactory media-type="json" description="crear solicitud">
            <format>                               {      "_put_solicitudServicio_caseid":{        "case_id":"$1",         "sose_id":"$2"        }      }      </format>
            <args>
               <arg evaluator="json" expression="$.payload.caseId"/>
               <arg evaluator="xml" expression="get-property('sose_id')"/>
            </args>
         </payloadFactory>
         <log level="custom" category="DEBUG" description="donde 4">
            <property name="msg actual 7 despues de BPM antes de actualizar caseid" expression="json-eval($)"/>
         </log>
         <property name="uri.var.solicitudServicioCaseId_url" expression="fn:concat($ctx:dataservices_url,'/MANDataService/solicitudServicio/caseid')" scope="default"/>
         <call>
            <endpoint>
               <http method="PUT" uri-template="{uri.var.solicitudServicioCaseId_url}"/>
            </endpoint>
         </call>
         <filter source="get-property('axis2', 'HTTP_SC')" regex="2[0-9][0-9]">
            <then/>
            <else>
               <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <payloadFactory media-type="json" description="borrar solicitud">
                  <format>{ "_delete_solicitudServicio": { "soco_id":"$1"} }</format>
                  <args>
                     <arg evaluator="xml" expression="get-property('sose_id')"/>
                  </args>
               </payloadFactory>
               <property name="uri.var.solicitudServicioDELETE" expression="fn:concat($ctx:dataservices_url,'/solicitudServicio')" scope="default"/>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.solicitudServicioDELETE}"/>
                  </endpoint>
               </call>
               <header name="Accept" scope="transport" value="application/json"/>
               <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true" scope="default" type="STRING"/>
               <property name="uri.var.borrarInstanciaBPM_url" expression="fn:concat($ctx:api_url,'/bpm/proceso/instancia/')" scope="default"/>
               <log level="custom" category="DEBUG" description="donde 10">
                  <property name="msg actual 10 eliminando caso de BPM" expression="json-eval($)"/>
                  <property name="url actual 10 eliminando caso de BPM" expression="$ctx:uri.var.borrarInstanciaBPM_url"/>
               </log>
               <call>
                  <endpoint>
                     <http method="DELETE" uri-template="{uri.var.borrarInstanciaBPM_url}"/>
                  </endpoint>
               </call>
               <property name="TOOLS_ERROR" value="PUT /solicitudServicio/caseid con problemas" type="STRING"/>
               <sequence key="toolsFault"/>
            </else>
         </filter>
         <log level="full" category="DEBUG" description="salida insequence"/>
         <loopback/>
      </inSequence>
      <outSequence>
         <log level="full" category="DEBUG">
            <property name="MESSAGE" value="FIRST"/>
         </log>
         <payloadFactory media-type="json" description="Mensaje error">
            <format>{"resultado":              { "resultado" : "ok"              , "sose_id":"$1"                 , "case_id":"$2"           , "bpmSession":"$3"   }             }</format>
            <args>
               <arg evaluator="xml" expression="get-property('sose_id')"/>
               <arg evaluator="xml" expression="get-property('uri.var.caseid')"/>
               <arg evaluator="xml" expression="get-property('uri.var.bpmSession')"/>
            </args>
         </payloadFactory>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence>
         <property name="ERROR_MESSAGE" expression="json-eval($)" type="STRING"/>
         <property name="TOOLS_ERROR" value="Error general generando Solicitud de Contendores" type="STRING"/>
         <sequence key="toolsFault"/>
      </faultSequence>
   </resource>
</api>                        