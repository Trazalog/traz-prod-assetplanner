<?php defined('BASEPATH') OR exit('No direct script access allowed');

/**
 * Widget helper. Helper para traer los valores de los widgets del sistema.
 * @author Pablo Andrés Rojo
 * @version 1.0
 */



if (!function_exists('cantOrdenesServicio')) {
    /**
     * Muestra cantidad de ordenes en curso.
     *
     * @var    Bool    $echo   Si muestra o devuelve la variable.
     * @return Void|String     Imprime la cantidad o la devuelve.
     */
    function cantOrdenesServicio($echo = TRUE)
    {
        // Get a reference to the controller object
        $CI = get_instance();
        // You may need to load the model if it hasn't been pre-loaded
        $CI->load->model('Widget');
        // Call a function of the model
        $output = $CI->Widget->getCantidad('orden_trabajo');
        // Output
        if ($echo == TRUE) {
            echo $output;
        }
        else {
            return $output;
        }
    }
}

// --------------------------------------------------------------------

if (!function_exists('cantOrdenesEnCurso')) {
    /**
     * Muestra cantidad de ordenes en curso.
     *
     * @var    Bool    $echo   Si muestra o devuelve la variable.
     * @return Void|String     Imprime la cantidad o la devuelve.
     */
    function cantOrdenesEnCurso($echo = TRUE)
    {
        // Get a reference to the controller object
        $CI = get_instance();
        // You may need to load the model if it hasn't been pre-loaded
        $CI->load->model('Widget');
        // Call a function of the model
        $output = $CI->Widget->getCantidadWhere('orden_trabajo', 'estado', 'C');
        // Output
        if ($echo == TRUE) {
            echo $output;
        }
        else {
            return $output;
        }
    }
}

// --------------------------------------------------------------------

if (!function_exists('cantOrdenesVencidas')) {
    /**
     * Muestra cantidad de ordenes en curso.
     *
     * @var    Bool    $echo   Si muestra o devuelve la variable.
     * @return Void|String     Imprime la cantidad o la devuelve.
     */
    function cantOrdenesVencidas($echo = TRUE)
    {
        // Get a reference to the controller object
        $CI = get_instance();
        // You may need to load the model if it hasn't been pre-loaded
        $CI->load->model('Widget');
        // Call a function of the model
        $output = $CI->Widget->getCantidadWhere('orden_trabajo', 'estado', 'V');
        // Output
        if ($echo == TRUE) {
            echo $output;
        }
        else {
            return $output;
        }
    }
}

// --------------------------------------------------------------------

if (!function_exists('cantOrdenesAsignadas')) {
    /**
     * Muestra cantidad de ordenes en curso.
     *
     * @var    Bool    $echo   Si muestra o devuelve la variable.
     * @return Void|String     Imprime la cantidad o la devuelve.
     */
    function cantOrdenesAsignadas($echo = TRUE)
    {
        // Get a reference to the controller object
        $CI = get_instance();
        // You may need to load the model if it hasn't been pre-loaded
        $CI->load->model('Widget');
        // Call a function of the model
        $output = $CI->Widget->getCantidadWhere('orden_trabajo', 'estado', 'As');
        // Output
        if ($echo == TRUE) {
            echo $output;
        }
        else {
            return $output;
        }
    }
}

// --------------------------------------------------------------------

if (!function_exists('cantOrdenesCritico')) {
    /**
     * Muestra cantidad de ordenes en curso.
     *
     * @var    Bool    $echo   Si muestra o devuelve la variable.
     * @return Void|String     Imprime la cantidad o la devuelve.
     */
    function cantOrdenesCritico($echo = TRUE)
    {
        // Get a reference to the controller object
        $CI = get_instance();
        // You may need to load the model if it hasn't been pre-loaded
        $CI->load->model('Widget');
        // Call a function of the model
        $output = $CI->Widget->getCantidadWhere('orden_trabajo', 'estado', 'Cr');
        // Output
        if ($echo == TRUE) {
            echo $output;
        }
        else {
            return $output;
        }
    }
}





// --------------------------------------------------------------------

if (!function_exists('cantTipoOrdenTrabajo')) {
    /**
     *
     *
     */
    function cantTipoOrdenTrabajo($echo = FALSE)
    {
        // Get a reference to the controller object
        $CI = get_instance();
        // You may need to load the model if it hasn't been pre-loaded
        $CI->load->model('Otrabajos');
        // Call a function of the model
        $output = $CI->Otrabajos->kpiCantTipoOrdenTrabajo();
        // En DB tabla orden_trabajo, en el campo tipo 
            // 1 = correctivo - Orden de Trabajo
            // 2 = preventivo - Solicitud de servicio
            // 3 = predictivo - Preventivo
            // 4 = backlog    - Backlog
        // Output
        if ($echo == TRUE) {
            echo $output;
        }
        else {
            return $output;
        }
    }
}

if (!function_exists('sacarEquiposOperativos')) {
    /**
     *
     *
     */
    function sacarEquiposOperativos($echo = FALSE)
    {
        // Get a reference to the controller object
        $CI = get_instance();
        // You may need to load the model if it hasn't been pre-loaded
        $CI->load->model('Equipos');
        // Call a function of the model
<<<<<<< HEAD
        $equipos = $CI->Equipos->kpiSacarEquiposOperativos();
        /* En DB tabla historial lectura, en el campo estado */
            // AC = activo
            // RE = reparacion
        /* en campo equipos: IN, AN, etc... */

        // En un bucle me fijo si el estado de equipos está en el arreglo equipos
        // Si no está lo agrego en el arreglo estados
        $estados = [];
        for ($i=0; $i < sizeof($equipos); $i++) { 
            if (!in_array( $equipos[$i]['estado'], $estados )) {
                array_push( $estados, $equipos[$i]['estado'] );
            }
        }

        //cuento cantidad de cada estado y agrego esos campos (Estado y cantidad) al arreglo $outuput
        $output[0]['cantEstadoActivo'] = 0;
        foreach ($estados as $clave) {
            if( $clave == 'AC') 
            {
                $output[0]['estado'] = 'OP'; //Operativo
                $output[0]['cantEstadoActivo'] = array_count_values(array_column($equipos, 'estado'))[$clave];
            }
            else
            {
                $output[1]['estado'] = 'NO';//No Operativo
                $output[1]['cantEstadoActivo'] += array_count_values(array_column($equipos, 'estado'))[$clave];
            }
        }

        // si solo hay un estado (todos activos, o todos en reparacion)
        if( sizeof($equipos) == 1 ) {
            if( $equipos[0]['estado'] == 'OP' ) { //si solo tiene activos
                $equipos[1]['cantEstadoActivo'] = '0';
                $equipos[1]['estado'] = 'NO';
            } else { //si tiene todos en reparacion
                $equipos[1]['cantEstadoActivo'] = '0';
                $equipos[1]['estado'] = 'OP';
            }
        }

=======
        $output = $CI->Equipos->kpiSacarEquiposOperativos();
        /* En DB tabla equipo, en el campo estado */
            // AC = activo
            // AN = anulado
>>>>>>> asset-sim
        // Output
        if ($echo == TRUE) {
            echo $output;
        }
        else {
            return $output;
        }
    }
}

if (!function_exists('calcularDisponibilidad')) {
    /**
     *
     *
     */
<<<<<<< HEAD
    function calcularDisponibilidad($idEquipo)
=======
    function calcularDisponibilidad($idEquipo, $fechaInicio=false, $fechaFin=false, $echo = FALSE)
>>>>>>> asset-sim
    {
        //dump($fechaFin);
        // Get a reference to the controller object
        $CI = get_instance();
        // You may need to load the model if it hasn't been pre-loaded
        $CI->load->model('Equipos');
        // Call a function of the model
<<<<<<< HEAD
        $output = $CI->Equipos->kpiCalcularDisponibilidad($idEquipo);
        //dump_exit($output);
        return $output;
=======
        $output = $CI->Equipos->kpiCalcularDisponibilidad($idEquipo, $fechaInicio, $fechaFin);
        //dump($output);
        // Output
        if ($echo == TRUE) {
            echo $output;
        }
        else {
            return $output;
        }
>>>>>>> asset-sim
    }
}
